version: "3"

services:
    backoffice:
        build: .
        ports:
            - "8080:8080"
            - "9229:9229"
        environment:
            NODE_ENV: "${NODE_ENV}"
            BASE_HOSTNAME: "${BASE_HOSTNAME}"
            sails_datastores__default__adapter: "sails-postgresql"
            sails_datastores__default__url: "postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/postgres"
            sails_sockets__onlyAllowOrigins: '["https://backoffice.${BASE_HOSTNAME}","http://backoffice.${BASE_HOSTNAME}:8088"]'
            sails_session__url: "redis://redis:6379/0"
            sails_custom__killSwitchToken: "SomeRandomToken"
            sails_custom__baseHostname: "${BASE_HOSTNAME}"
        depends_on:
            - "db"
            - "redis"
        restart: unless-stopped
    backend-api:
        build: backend-django
        ports:
            - "8082:8080"
        environment:
            BASE_HOSTNAME: "${BASE_HOSTNAME}"
            BACKOFFICE_SECRET_KEY: "${BACKOFFICE_SECRET_KEY}"
            BACKOFFICE_DB_ENGINE: django.db.backends.postgresql_psycopg2
            BACKOFFICE_DB_NAME: postgres
            BACKOFFICE_DB_USER: postgres
            BACKOFFICE_DB_PASSWORD: ${POSTGRES_PASSWORD}
            BACKOFFICE_DB_HOST: db
            BACKOFFICE_DB_PORT: 5432
        depends_on:
            - "db"
            - "redis"
        restart: unless-stopped
    nginx:
        build: nginx
        environment:
            BASE_HOSTNAME: "${BASE_HOSTNAME}"
        ports:
            - "8088:80"
            - "8083:443"
        depends_on:
            - "backoffice"
            - "backend-api"
        restart: unless-stopped
    db:
        build:
            context: backend
            dockerfile: Dockerfile.db
        environment:
            POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
        volumes:
          - postgres_data:/var/lib/postgresql/data
        restart: unless-stopped
    redis:
        image: "redis:6"
        restart: unless-stopped

volumes:
    postgres_data: